(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{513:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-消息队列之-rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-消息队列之-rabbitmq"}},[t._v("#")]),t._v(" 1. 消息队列之 RabbitMQ")]),t._v(" "),a("p",[t._v("关于消息队列，从前年开始断断续续看了些资料，想写很久了，但一直没腾出空，近来分别碰到几个朋友聊这块的技术选型，是时候把这块的知识整理记录一下了。")]),t._v(" "),a("p",[t._v("市面上的消息队列产品有很多，比如老牌的 ActiveMQ、RabbitMQ ，目前我看最火的 Kafka ，还有 ZeroMQ ，去年底阿里巴巴捐赠给 Apache 的 RocketMQ ，连 redis 这样的 NoSQL 数据库也支持 MQ 功能。总之这块知名的产品就有十几种，就我自己的使用经验和兴趣只打算谈谈 RabbitMQ、Kafka 和 ActiveMQ ，本文先讲 RabbitMQ ，在此之前先看下消息队列的相关概念。")]),t._v(" "),a("h1",{attrs:{id:"_2-什么叫消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么叫消息队列"}},[t._v("#")]),t._v(" 2. 什么叫消息队列")]),t._v(" "),a("p",[t._v("消息（Message）是指在应用间传送的数据。消息可以非常简单，比如只包含文本字符串，也可以更复杂，可能包含嵌入对象。")]),t._v(" "),a("p",[t._v("消息队列（Message Queue）是一种应用间的通信方式，消息发送后可以立即返回，由消息系统来确保消息的可靠传递。消息发布者只管把消息发布到 MQ 中而不用管谁来取，消息使用者只管从 MQ 中取消息而不管是谁发布的。这样发布者和使用者都不用知道对方的存在。")]),t._v(" "),a("h1",{attrs:{id:"_3-为何用消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-为何用消息队列"}},[t._v("#")]),t._v(" 3. 为何用消息队列")]),t._v(" "),a("p",[t._v("从上面的描述中可以看出消息队列是一种应用间的异步协作机制，那什么时候需要使用 MQ 呢？")]),t._v(" "),a("p",[t._v("以常见的订单系统为例，用户点击【下单】按钮之后的业务逻辑可能包括：扣减库存、生成相应单据、发红包、发短信通知。在业务发展初期这些逻辑可能放在一起同步执行，随着业务的发展订单量增长，需要提升系统服务的性能，这时可以将一些不需要立即生效的操作拆分出来异步执行，比如发放红包、发短信通知等。这种场景下就可以用 MQ ，在下单的主流程（比如扣减库存、生成相应单据）完成之后发送一条消息到 MQ 让主流程快速完结，而由另外的单独线程拉取MQ的消息（或者由 MQ 推送消息），当发现 MQ 中有发红包或发短信之类的消息时，执行相应的业务逻辑。")]),t._v(" "),a("p",[t._v("以上是用于业务解耦的情况，其它常见场景包括最终一致性、广播、错峰流控等等。")]),t._v(" "),a("h1",{attrs:{id:"_4-rabbitmq-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-rabbitmq-特点"}},[t._v("#")]),t._v(" 4. RabbitMQ 特点")]),t._v(" "),a("p",[t._v("RabbitMQ 是一个由 Erlang 语言开发的 AMQP 的开源实现。")]),t._v(" "),a("p",[t._v("AMQP ：Advanced Message Queue，高级消息队列协议。它是应用层协议的一个开放标准，为面向消息的中间件设计，基于此协议的客户端与消息中间件可传递消息，并不受产品、开发语言等条件的限制。")]),t._v(" "),a("p",[t._v("RabbitMQ 最初起源于金融系统，用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。具体特点包括：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("可靠性（Reliability）\nRabbitMQ 使用一些机制来保证可靠性，如持久化、传输确认、发布确认。")])]),t._v(" "),a("li",[a("p",[t._v("灵活的路由（Flexible Routing）\n在消息进入队列之前，通过 Exchange 来路由消息的。对于典型的路由功能，RabbitMQ 已经提供了一些内置的 Exchange 来实现。针对更复杂的路由功能，可以将多个 Exchange 绑定在一起，也通过插件机制实现自己的 Exchange 。")])]),t._v(" "),a("li",[a("p",[t._v("消息集群（Clustering）\n多个 RabbitMQ 服务器可以组成一个集群，形成一个逻辑 Broker 。")])]),t._v(" "),a("li",[a("p",[t._v("高可用（Highly Available Queues）\n队列可以在集群中的机器上进行镜像，使得在部分节点出问题的情况下队列仍然可用。")])]),t._v(" "),a("li",[a("p",[t._v("多种协议（Multi-protocol）\nRabbitMQ 支持多种消息队列协议，比如 STOMP、MQTT 等等。")])]),t._v(" "),a("li",[a("p",[t._v("多语言客户端（Many Clients）\nRabbitMQ 几乎支持所有常用语言，比如 Java、.NET、Ruby 等等。")])]),t._v(" "),a("li",[a("p",[t._v("管理界面（Management UI）\nRabbitMQ 提供了一个易用的用户界面，使得用户可以监控和管理消息 Broker 的许多方面。")])]),t._v(" "),a("li",[a("p",[t._v("跟踪机制（Tracing）\n如果消息异常，RabbitMQ 提供了消息跟踪机制，使用者可以找出发生了什么。")])]),t._v(" "),a("li",[a("p",[t._v("插件机制（Plugin System）\nRabbitMQ 提供了许多插件，来从多方面进行扩展，也可以编写自己的插件。")])])]),t._v(" "),a("h1",{attrs:{id:"_5-rabbitmq-中的概念模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-rabbitmq-中的概念模型"}},[t._v("#")]),t._v(" 5. RabbitMQ 中的概念模型")]),t._v(" "),a("h5",{attrs:{id:"消息模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息模型"}},[t._v("#")]),t._v(" 消息模型")]),t._v(" "),a("p",[t._v("所有 MQ 产品从模型抽象上来说都是一样的过程：\n消费者（consumer）订阅某个队列。生产者（producer）创建消息，然后发布到队列（queue）中，最后将消息发送到监听的消费者。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7a8d4743.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-066ff248d5ff8eed.png?imageMogr2/auto-orient/strip|imageView2/2/w/401/format/png"}})]),t._v(" "),a("p",[t._v("消息流")]),t._v(" "),a("h5",{attrs:{id:"rabbitmq-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-基本概念"}},[t._v("#")]),t._v(" RabbitMQ 基本概念")]),t._v(" "),a("p",[t._v("上面只是最简单抽象的描述，具体到 RabbitMQ 则有更详细的概念需要解释。上面介绍过 RabbitMQ 是 AMQP 协议的一个开源实现，所以其内部实际上也是 AMQP 中的基本概念：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7a90d362.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-367dd717d89ae5db.png?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/png"}})]),t._v(" "),a("p",[t._v("RabbitMQ 内部结构")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Message\n消息，消息是不具名的，它由消息头和消息体组成。消息体是不透明的，而消息头则由一系列的可选属性组成，这些属性包括routing-key（路由键）、priority（相对于其他消息的优先权）、delivery-mode（指出该消息可能需要持久性存储）等。")])]),t._v(" "),a("li",[a("p",[t._v("Publisher\n消息的生产者，也是一个向交换器发布消息的客户端应用程序。")])]),t._v(" "),a("li",[a("p",[t._v("Exchange\n交换器，用来接收生产者发送的消息并将这些消息路由给服务器中的队列。")])]),t._v(" "),a("li",[a("p",[t._v("Binding\n绑定，用于消息队列和交换器之间的关联。一个绑定就是基于路由键将交换器和消息队列连接起来的路由规则，所以可以将交换器理解成一个由绑定构成的路由表。")])]),t._v(" "),a("li",[a("p",[t._v("Queue\n消息队列，用来保存消息直到发送给消费者。它是消息的容器，也是消息的终点。一个消息可投入一个或多个队列。消息一直在队列里面，等待消费者连接到这个队列将其取走。")])]),t._v(" "),a("li",[a("p",[t._v("Connection\n网络连接，比如一个TCP连接。")])]),t._v(" "),a("li",[a("p",[t._v("Channel\n信道，多路复用连接中的一条独立的双向数据流通道。信道是建立在真实的TCP连接内地虚拟连接，AMQP 命令都是通过信道发出去的，不管是发布消息、订阅队列还是接收消息，这些动作都是通过信道完成。因为对于操作系统来说建立和销毁 TCP 都是非常昂贵的开销，所以引入了信道的概念，以复用一条 TCP 连接。")])]),t._v(" "),a("li",[a("p",[t._v("Consumer\n消息的消费者，表示一个从消息队列中取得消息的客户端应用程序。")])]),t._v(" "),a("li",[a("p",[t._v("Virtual Host\n虚拟主机，表示一批交换器、消息队列和相关对象。虚拟主机是共享相同的身份认证和加密环境的独立服务器域。每个 vhost 本质上就是一个 mini 版的 RabbitMQ 服务器，拥有自己的队列、交换器、绑定和权限机制。vhost 是 AMQP 概念的基础，必须在连接时指定，RabbitMQ 默认的 vhost 是 / 。")])]),t._v(" "),a("li",[a("p",[t._v("Broker\n表示消息队列服务器实体。")])])]),t._v(" "),a("h5",{attrs:{id:"amqp-中的消息路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amqp-中的消息路由"}},[t._v("#")]),t._v(" AMQP 中的消息路由")]),t._v(" "),a("p",[t._v("AMQP 中消息的路由过程和 Java 开发者熟悉的 JMS 存在一些差别，AMQP 中增加了 Exchange 和 Binding 的角色。生产者把消息发布到 Exchange 上，消息最终到达队列并被消费者接收，而 Binding 决定交换器的消息应该发送到那个队列。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7a93ef71.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-7fd73af768f28704.png?imageMogr2/auto-orient/strip|imageView2/2/w/484/format/png"}})]),t._v(" "),a("p",[t._v("AMQP 的消息路由过程")]),t._v(" "),a("h5",{attrs:{id:"exchange-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exchange-类型"}},[t._v("#")]),t._v(" Exchange 类型")]),t._v(" "),a("p",[t._v("Exchange分发消息时根据类型的不同分发策略有区别，目前共四种类型：direct、fanout、topic、headers 。headers 匹配 AMQP 消息的 header 而不是路由键，此外 headers 交换器和 direct 交换器完全一致，但性能差很多，目前几乎用不到了，所以直接看另外三种类型：")]),t._v(" "),a("ol",[a("li",[t._v("direct")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7a97939c.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-13db639d2c22f2aa.png?imageMogr2/auto-orient/strip|imageView2/2/w/385/format/png"}})]),t._v(" "),a("p",[t._v("direct 交换器")]),t._v(" "),a("p",[t._v("消息中的路由键（routing key）如果和 Binding 中的 binding key 一致， 交换器就将消息发到对应的队列中。路由键与队列名完全匹配，如果一个队列绑定到交换机要求路由键为“dog”，则只转发 routing key 标记为“dog”的消息，不会转发“dog.puppy”，也不会转发“dog.guard”等等。它是完全匹配、单播的模式。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("fanout")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7a9ad4fe.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-2f509b7f34c47170.png?imageMogr2/auto-orient/strip|imageView2/2/w/463/format/png"}})]),t._v(" "),a("p",[t._v("fanout 交换器")]),t._v(" "),a("p",[t._v("每个发到 fanout 类型交换器的消息都会分到所有绑定的队列上去。fanout 交换器不处理路由键，只是简单的将队列绑定到交换器上，每个发送到交换器的消息都会被转发到与该交换器绑定的所有队列上。很像子网广播，每台子网内的主机都获得了一份复制的消息。fanout 类型转发消息是最快的。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("topic")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7a9e3b07.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-275ea009bdf806a0.png?imageMogr2/auto-orient/strip|imageView2/2/w/558/format/png"}})]),t._v(" "),a("p",[t._v("topic 交换器")]),t._v(" "),a("p",[t._v("topic 交换器通过模式匹配分配消息的路由键属性，将路由键和某个模式进行匹配，此时队列需要绑定到一个模式上。它将路由键和绑定键的字符串切分成单词，这些单词之间用点隔开。它同样也会识别两个通配符：符号“#”和符号“*”"),a("strong",[t._v("。")]),t._v("#"),a("strong",[t._v("匹配")]),t._v("0**个或多个单词，*匹配不多不少一个单词。")]),t._v(" "),a("h1",{attrs:{id:"_6-rabbitmq-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-rabbitmq-安装"}},[t._v("#")]),t._v(" 6. RabbitMQ 安装")]),t._v(" "),a("p",[t._v("一般来说安装 RabbitMQ 之前要安装 Erlang ，可以去"),a("a",{attrs:{href:"https://link.jianshu.com/?t=http://www.erlang.org/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("Erlang官网"),a("OutboundLink")],1),t._v("下载。接着去"),a("a",{attrs:{href:"https://link.jianshu.com/?t=https://www.rabbitmq.com/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RabbitMQ官网"),a("OutboundLink")],1),t._v("下载安装包，之后解压缩即可。根据操作系统不同官网提供了相应的安装说明："),a("a",{attrs:{href:"https://link.jianshu.com/?t=http://www.rabbitmq.com/install-windows.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://link.jianshu.com/?t=http://www.rabbitmq.com/install-debian.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Debian / Ubuntu"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://link.jianshu.com/?t=http://www.rabbitmq.com/install-rpm.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RPM-based Linux"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://link.jianshu.com/?t=http://www.rabbitmq.com/install-standalone-mac.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mac"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("如果是Mac 用户，个人推荐使用 HomeBrew 来安装，安装前要先更新 brew：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("brew update\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("接着安装 rabbitmq 服务器：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("brew install rabbitmq\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这样 RabbitMQ 就安装好了，安装过程中会自动其所依赖的 Erlang 。")]),t._v(" "),a("p",[a("strong",[t._v("下载")]),t._v("erlang")]),t._v(" "),a("p",[t._v("https://www.erlang-solutions.com/resources/download.html")]),t._v(" "),a("p",[t._v("wget https://packages.erlang-solutions.com/erlang-solutions-2.0-1.noarch.rpm")]),t._v(" "),a("p",[t._v("rpm -Uvh erlang-solutions-2.0-1.noarch.rpm")]),t._v(" "),a("p",[t._v("rpm --import https://packages.erlang-solutions.com/rpm/erlang_solutions.asc")]),t._v(" "),a("p",[t._v("yum install erlang -y")]),t._v(" "),a("p",[a("strong",[t._v("下载")]),t._v("rabbitmq")]),t._v(" "),a("p",[t._v("https://www.rabbitmq.com/download.html")]),t._v(" "),a("p",[t._v("https://github.com/rabbitmq/rabbitmq-server/releases")]),t._v(" "),a("p",[t._v("vim /etc/profile.d/rabbit.sh")]),t._v(" "),a("p",[t._v("PATH=/opt/rabbitmq/sbin:$PATH")]),t._v(" "),a("h1",{attrs:{id:"_7-rabbitmq-运行和管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-rabbitmq-运行和管理"}},[t._v("#")]),t._v(" 7. RabbitMQ 运行和管理")]),t._v(" "),a("ol",[a("li",[t._v("启动\n启动很简单，找到安装后的 RabbitMQ 所在目录下的 sbin 目录，可以看到该目录下有6个以 rabbitmq 开头的可执行文件，直接执行 rabbitmq-server 即可，下面将 RabbitMQ 的安装位置以 . 代替，启动命令就是：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmq-server\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("启动正常的话会看到一些启动过程信息和最后的 completed with 7 plugins，这也说明启动的时候默认加载了7个插件。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7aa3b3d9.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-1392cdc83b0d8341.png?imageMogr2/auto-orient/strip|imageView2/2/w/1142/format/png"}})]),t._v(" "),a("p",[t._v("正常启动")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("后台启动\n如果想让 RabbitMQ 以守护程序的方式在后台运行，可以在启动的时候加上 -detached 参数：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmq-server -detached\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("查询服务器状态\nsbin 目录下有个特别重要的文件叫 rabbitmqctl ，它提供了 RabbitMQ 管理需要的几乎一站式解决方案，绝大部分的运维命令它都可以提供。\n查询 RabbitMQ 服务器的状态信息可以用参数 status ：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl status\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("该命令将输出服务器的很多信息，比如 RabbitMQ 和 Erlang 的版本、OS 名称、内存等等")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("关闭 RabbitMQ 节点\n我们知道 RabbitMQ 是用 Erlang 语言写的，在Erlang 中有两个概念：节点和应用程序。节点就是 Erlang 虚拟机的每个实例，而多个 Erlang 应用程序可以运行在同一个节点之上。节点之间可以进行本地通信（不管他们是不是运行在同一台服务器之上）。比如一个运行在节点A上的应用程序可以调用节点B上应用程序的方法，就好像调用本地函数一样。如果应用程序由于某些原因奔溃，Erlang 节点会自动尝试重启应用程序。\n如果要关闭整个 RabbitMQ 节点可以用参数 stop ：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl stop\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("它会和本地节点通信并指示其干净的关闭，也可以指定关闭不同的节点，包括远程节点，只需要传入参数 -n ：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl -n rabbit@server.example.com stop \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("-n node 默认 node 名称是 rabbit@server ，如果你的主机名是 "),a("a",{attrs:{href:"https://link.jianshu.com/?t=http://server.example.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("server.example.com"),a("OutboundLink")],1),t._v(" ，那么 node 名称就是 "),a("a",{attrs:{href:"https://link.jianshu.com/?t=mailto:rabbit@server.example.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("rabbit@server.example.com"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("关闭 RabbitMQ 应用程序\n如果只想关闭应用程序，同时保持 Erlang 节点运行则可以用 stop_app：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl stop_app\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这个命令在后面要讲的集群模式中将会很有用。")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("启动 RabbitMQ 应用程序")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl start_app\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("重置 RabbitMQ 节点")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl reset\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("该命令将清除所有的队列。")]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("查看已声明的队列")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl list_queues\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"9"}},[a("li",[t._v("查看交换器")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl list_exchanges\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("该命令还可以附加参数，比如列出交换器的名称、类型、是否持久化、是否自动删除：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl list_exchanges name type durable auto_delete\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"10"}},[a("li",[t._v("查看绑定")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmqctl list_bindings\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"11"}},[a("li",[t._v("启用web插件")])]),t._v(" "),a("p",[t._v("rabbitmq-plugins enable rabbitmq_management")]),t._v(" "),a("h1",{attrs:{id:"_8-java-客户端访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-java-客户端访问"}},[t._v("#")]),t._v(" 8. Java 客户端访问")]),t._v(" "),a("p",[t._v("RabbitMQ 支持多种语言访问，以 Java 为例看下一般使用 RabbitMQ 的步骤。")]),t._v(" "),a("ol",[a("li",[t._v("maven工程的pom文件中添加依赖")])]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.rabbitmq"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("amqp-client"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.1.0"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("消息生产者")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("study"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbitmq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Channel")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbitmq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbitmq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionFactory")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeoutException")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Producer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeoutException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建连接工厂")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionFactory")]),t._v(" factory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置 RabbitMQ 地址")]),t._v("\n        factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//建立到代理服务器到连接")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newConnection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获得信道")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Channel")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明交换器")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" exchangeName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-exchange"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exchangeDeclare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" routingKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hola"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//发布消息")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" messageBodyBytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicPublish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" messageBodyBytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("消息消费者")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("study"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rabbitmq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeoutException")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Consumer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeoutException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionFactory")]),t._v(" factory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//建立到代理服务器到连接")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connection")]),t._v(" conn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newConnection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获得信道")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Channel")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明交换器")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" exchangeName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-exchange"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exchangeDeclare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明队列")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" queueName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queueDeclare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" routingKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hola"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绑定队列，通过键 hola 将队列和交换器绑定起来")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queueBind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//消费消息")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" autoAck "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" consumerTag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicConsume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" autoAck"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" consumerTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultConsumer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleDelivery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" consumerTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                           "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Envelope")]),t._v(" envelope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                           "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AMQP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BasicProperties")]),t._v(" properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" routingKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" envelope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRoutingKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" contentType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContentType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消费的路由键："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消费的内容类型："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" contentType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" deliveryTag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" envelope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDeliveryTag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//确认消息")]),t._v("\n                    channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicAck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deliveryTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"消费的消息体内容："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" bodyStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTF-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bodyStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("启动 RabbitMQ 服务器")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./sbin/rabbitmq-server\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[t._v("运行 Consumer\n先运行 Consumer ，这样当生产者发送消息的时候能在消费者后端看到消息记录。")])]),t._v(" "),a("li",[a("p",[t._v("运行 Producer\n接着运行 Producer ,发布一条消息，在 Consumer 的控制台能看到接收的消息：")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.aomtop.com/i/2022/06/13/62a6e7aa9ec35.png",alt:"https://upload-images.jianshu.io/upload_images/5015984-6f2d0168cfc2878d.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/png"}})]),t._v(" "),a("p",[t._v("Consumer 控制台")]),t._v(" "),a("h1",{attrs:{id:"_9-rabbitmq-集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-rabbitmq-集群"}},[t._v("#")]),t._v(" 9. RabbitMQ 集群")]),t._v(" "),a("p",[t._v("RabbitMQ 最优秀的功能之一就是内建集群，这个功能设计的目的是允许消费者和生产者在节点崩溃的情况下继续运行，以及通过添加更多的节点来线性扩展消息通信吞吐量。RabbitMQ 内部利用 Erlang 提供的分布式通信框架 OTP 来满足上述需求，使客户端在失去一个 RabbitMQ 节点连接的情况下，还是能够重新连接到集群中的任何其他节点继续生产、消费消息。")]),t._v(" "),a("h5",{attrs:{id:"rabbitmq-集群中的一些概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-集群中的一些概念"}},[t._v("#")]),t._v(" RabbitMQ 集群中的一些概念")]),t._v(" "),a("p",[t._v("RabbitMQ 会始终记录以下四种类型的内部元数据：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("队列元数据\n包括队列名称和它们的属性，比如是否可持久化，是否自动删除")])]),t._v(" "),a("li",[a("p",[t._v("交换器元数据\n交换器名称、类型、属性")])]),t._v(" "),a("li",[a("p",[t._v("绑定元数据\n内部是一张表格记录如何将消息路由到队列")])]),t._v(" "),a("li",[a("p",[t._v("vhost 元数据\n为 vhost 内部的队列、交换器、绑定提供命名空间和安全属性")])])]),t._v(" "),a("p",[t._v("在单一节点中，RabbitMQ 会将所有这些信息存储在内存中，同时将标记为可持久化的队列、交换器、绑定存储到硬盘上。存到硬盘上可以确保队列和交换器在节点重启后能够重建。而在集群模式下同样也提供两种选择：存到硬盘上（独立节点的默认设置），存在内存中。")]),t._v(" "),a("p",[t._v("如果在集群中创建队列，集群只会在单个节点而不是所有节点上创建完整的队列信息（元数据、状态、内容）。结果是只有队列的所有者节点知道有关队列的所有信息，因此当集群节点崩溃时，该节点的队列和绑定就消失了，并且任何匹配该队列的绑定的新消息也丢失了。还好RabbitMQ 2.6.0之后提供了镜像队列以避免集群节点故障导致的队列内容不可用。")]),t._v(" "),a("p",[t._v("RabbitMQ 集群中可以共享 user、vhost、exchange等，所有的数据和状态都是必须在所有节点上复制的，例外就是上面所说的消息队列。RabbitMQ 节点可以动态的加入到集群中。")]),t._v(" "),a("p",[t._v("当在集群中声明队列、交换器、绑定的时候，这些操作会直到所有集群节点都成功提交元数据变更后才返回。集群中有内存节点和磁盘节点两种类型，内存节点虽然不写入磁盘，但是它的执行比磁盘节点要好。内存节点可以提供出色的性能，磁盘节点能保障配置信息在节点重启后仍然可用，那集群中如何平衡这两者呢？")]),t._v(" "),a("p",[t._v("RabbitMQ 只要求集群中至少有一个磁盘节点，所有其他节点可以是内存节点，当节点加入火离开集群时，它们必须要将该变更通知到至少一个磁盘节点。如果只有一个磁盘节点，刚好又是该节点崩溃了，那么集群可以继续路由消息，但不能创建队列、创建交换器、创建绑定、添加用户、更改权限、添加或删除集群节点。换句话说集群中的唯一磁盘节点崩溃的话，集群仍然可以运行，但知道该节点恢复，否则无法更改任何东西。")]),t._v(" "),a("h1",{attrs:{id:"_10-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-操作"}},[t._v("#")]),t._v(" 10. 操作")]),t._v(" "),a("p",[t._v("#新增用户admin，密码为admins-1")]),t._v(" "),a("p",[t._v("rabbitmqctl add_user admin admins-1")]),t._v(" "),a("p",[t._v("#更改密码")]),t._v(" "),a("p",[t._v("rabbitmqctl change_password admin 123456")]),t._v(" "),a("p",[t._v("#查看用户列表")]),t._v(" "),a("p",[t._v("rabbitmqctl list_users")]),t._v(" "),a("p",[t._v("#赋予用户全部操作权限")]),t._v(" "),a("p",[t._v('rabbitmqctl set_permissions -p / admin ".'),a("em",[t._v('" ".')]),t._v('" ".*"')]),t._v(" "),a("p",[t._v("#将admin加入到管理员组")]),t._v(" "),a("p",[t._v("rabbitmqctl set_user_tags admin administrator")]),t._v(" "),a("p",[t._v("#查看用户的权限")]),t._v(" "),a("p",[t._v("rabbitmqctl list_user_permissions admin")]),t._v(" "),a("p",[t._v("#(最后操作)由于RabbitMQ默认的账号用户名和密码都是guest。为了安全起见, 先删掉默认用户")]),t._v(" "),a("p",[t._v("rabbitmqctl delete_user guest")]),t._v(" "),a("h1",{attrs:{id:"_11-开机脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-开机脚本"}},[t._v("#")]),t._v(" 11. 开机脚本")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EOF'"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /usr/lib/systemd/system/rabbitmq-server.service")]),t._v("\n \n[Unit]\nDescription=RabbitMQ broker\nAfter=syslog.target network.target\n \n[Service]\n#Type=notify\nUser=root\nGroup=root\nWorkingDirectory=/opt/rabbitmq\nExecStart=/opt/rabbitmq/sbin/rabbitmq-server\nExecStop=/opt/rabbitmq/sbin/rabbitmqctl stop\n \n[Install]\nWantedBy=multi-user.target\n \nEOF")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rabbitmq-server RabbitMQ broker")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chkconfig: - 80 05")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# description: Enable AMQP service provided by RabbitMQ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### BEGIN INIT INFO")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Provides:     rabbitmq-server")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Required-Start:  $remote_fs $network")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Required-Stop:   $remote_fs $network")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Description:    RabbitMQ broker")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Short-Description: Enable AMQP service provided by RabbitMQ broker")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### END INIT INFO")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Source function library.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" /etc/init.d/functions\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/sbin:/usr/sbin:/bin:/usr/bin\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("rabbitmq-server\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#DAEMON=/usr/sbin/${NAME}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#CONTROL=/usr/sbin/rabbitmqctl")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DAEMON")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/home/software/rabbitmq/sbin/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${NAME}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CONTROL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/home/software/rabbitmq/sbin/rabbitmqctl\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DESC")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("rabbitmq-server\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ROTATE_SUFFIX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("INIT_LOG_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/log/rabbitmq\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PID_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/run/rabbitmq/pid\n \n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("START_PROG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"daemon"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LOCK_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lock/subsys/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NAME")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" -x "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DAEMON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" -x "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTROL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -f /etc/default/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${NAME}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" /etc/default/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${NAME}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("ensure_pid_dir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PID_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("PID_FILE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" -d "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PID_DIR}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PID_DIR}")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("}")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PID_DIR}")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("755")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PID_DIR}")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("remove_pid")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PID_FILE}")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rmdir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("PID_FILE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("start_rabbitmq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    status_rabbitmq quiet\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RETVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" RabbitMQ is currently running\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n​      ensure_pid_dir\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +e\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RABBITMQ_PID_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PID_FILE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$START_PROG")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DAEMON")]),t._v(" \n​        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${INIT_LOG_DIR}")]),t._v('/startup_log"')]),t._v(" \n​        "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${INIT_LOG_DIR}")]),t._v('/startup_err"')]),t._v(" \n​        "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v("<&")]),t._v("- "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTROL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PID_FILE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n​      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RETVAL")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n​        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​          "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" SUCCESS\n​          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LOCK_FILE")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LOCK_FILE")]),t._v("\n​          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n​          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​        *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​          remove_pid\n​          "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" FAILED - check "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${INIT_LOG_DIR}")]),t._v("/startup_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("log, _err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​          "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n​          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("stop_rabbitmq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    status_rabbitmq quiet\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RETVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +e\n​      "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTROL")]),t._v(" stop "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PID_FILE}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${INIT_LOG_DIR}")]),t._v("/shutdown_log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${INIT_LOG_DIR}")]),t._v("/shutdown_err\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n​      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RETVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​        remove_pid\n​        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LOCK_FILE")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​          "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LOCK_FILE")]),t._v("\n​        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n​        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" FAILED - check "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${INIT_LOG_DIR}")]),t._v("/shutdown_log, _err\n​      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" RabbitMQ is not running\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("status_rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +e\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quiet"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTROL")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTROL")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("rotate_logs_rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" +e\n​    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CONTROL")]),t._v(" rotate_logs "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${ROTATE_SUFFIX}")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("restart_running_rabbitmq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    status_rabbitmq quiet\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RETVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n​      restart_rabbitmq\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" RabbitMQ is not runnning\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n​    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("restart_rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n​    stop_rabbitmq\n​    start_rabbitmq\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n​    start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starting '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DESC")]),t._v(': "')]),t._v("\n​      start_rabbitmq\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NAME")]),t._v('."')]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​    stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Stopping '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DESC")]),t._v(': "')]),t._v("\n​      stop_rabbitmq\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NAME")]),t._v('."')]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​    status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​      status_rabbitmq\n​      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​    rotate-logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rotating log files for '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DESC")]),t._v(': "')]),t._v("\n​      rotate_logs_rabbitmq\n​      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​    force-reload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("reload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("restart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Restarting '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DESC")]),t._v(': "')]),t._v("\n​      restart_rabbitmq\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NAME")]),t._v('."')]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​    try-restart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Restarting '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DESC")]),t._v(': "')]),t._v("\n​      restart_running_rabbitmq\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NAME")]),t._v('."')]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n​    *"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Usage: '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v(' {start|stop|status|\n​            rotate-logs|restart|condrestart|\n​            try-restart|reload|force-reload}"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&2")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RETVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n​      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RETVAL")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br"),a("span",{staticClass:"line-number"},[t._v("72")]),a("br"),a("span",{staticClass:"line-number"},[t._v("73")]),a("br"),a("span",{staticClass:"line-number"},[t._v("74")]),a("br"),a("span",{staticClass:"line-number"},[t._v("75")]),a("br"),a("span",{staticClass:"line-number"},[t._v("76")]),a("br"),a("span",{staticClass:"line-number"},[t._v("77")]),a("br"),a("span",{staticClass:"line-number"},[t._v("78")]),a("br"),a("span",{staticClass:"line-number"},[t._v("79")]),a("br"),a("span",{staticClass:"line-number"},[t._v("80")]),a("br"),a("span",{staticClass:"line-number"},[t._v("81")]),a("br"),a("span",{staticClass:"line-number"},[t._v("82")]),a("br"),a("span",{staticClass:"line-number"},[t._v("83")]),a("br"),a("span",{staticClass:"line-number"},[t._v("84")]),a("br"),a("span",{staticClass:"line-number"},[t._v("85")]),a("br"),a("span",{staticClass:"line-number"},[t._v("86")]),a("br"),a("span",{staticClass:"line-number"},[t._v("87")]),a("br"),a("span",{staticClass:"line-number"},[t._v("88")]),a("br"),a("span",{staticClass:"line-number"},[t._v("89")]),a("br"),a("span",{staticClass:"line-number"},[t._v("90")]),a("br"),a("span",{staticClass:"line-number"},[t._v("91")]),a("br"),a("span",{staticClass:"line-number"},[t._v("92")]),a("br"),a("span",{staticClass:"line-number"},[t._v("93")]),a("br"),a("span",{staticClass:"line-number"},[t._v("94")]),a("br"),a("span",{staticClass:"line-number"},[t._v("95")]),a("br"),a("span",{staticClass:"line-number"},[t._v("96")]),a("br"),a("span",{staticClass:"line-number"},[t._v("97")]),a("br"),a("span",{staticClass:"line-number"},[t._v("98")]),a("br"),a("span",{staticClass:"line-number"},[t._v("99")]),a("br"),a("span",{staticClass:"line-number"},[t._v("100")]),a("br"),a("span",{staticClass:"line-number"},[t._v("101")]),a("br"),a("span",{staticClass:"line-number"},[t._v("102")]),a("br"),a("span",{staticClass:"line-number"},[t._v("103")]),a("br"),a("span",{staticClass:"line-number"},[t._v("104")]),a("br"),a("span",{staticClass:"line-number"},[t._v("105")]),a("br"),a("span",{staticClass:"line-number"},[t._v("106")]),a("br"),a("span",{staticClass:"line-number"},[t._v("107")]),a("br"),a("span",{staticClass:"line-number"},[t._v("108")]),a("br"),a("span",{staticClass:"line-number"},[t._v("109")]),a("br"),a("span",{staticClass:"line-number"},[t._v("110")]),a("br"),a("span",{staticClass:"line-number"},[t._v("111")]),a("br"),a("span",{staticClass:"line-number"},[t._v("112")]),a("br"),a("span",{staticClass:"line-number"},[t._v("113")]),a("br"),a("span",{staticClass:"line-number"},[t._v("114")]),a("br"),a("span",{staticClass:"line-number"},[t._v("115")]),a("br"),a("span",{staticClass:"line-number"},[t._v("116")]),a("br"),a("span",{staticClass:"line-number"},[t._v("117")]),a("br"),a("span",{staticClass:"line-number"},[t._v("118")]),a("br"),a("span",{staticClass:"line-number"},[t._v("119")]),a("br"),a("span",{staticClass:"line-number"},[t._v("120")]),a("br"),a("span",{staticClass:"line-number"},[t._v("121")]),a("br"),a("span",{staticClass:"line-number"},[t._v("122")]),a("br"),a("span",{staticClass:"line-number"},[t._v("123")]),a("br"),a("span",{staticClass:"line-number"},[t._v("124")]),a("br"),a("span",{staticClass:"line-number"},[t._v("125")]),a("br"),a("span",{staticClass:"line-number"},[t._v("126")]),a("br"),a("span",{staticClass:"line-number"},[t._v("127")]),a("br"),a("span",{staticClass:"line-number"},[t._v("128")]),a("br"),a("span",{staticClass:"line-number"},[t._v("129")]),a("br"),a("span",{staticClass:"line-number"},[t._v("130")]),a("br"),a("span",{staticClass:"line-number"},[t._v("131")]),a("br"),a("span",{staticClass:"line-number"},[t._v("132")]),a("br"),a("span",{staticClass:"line-number"},[t._v("133")]),a("br"),a("span",{staticClass:"line-number"},[t._v("134")]),a("br"),a("span",{staticClass:"line-number"},[t._v("135")]),a("br"),a("span",{staticClass:"line-number"},[t._v("136")]),a("br"),a("span",{staticClass:"line-number"},[t._v("137")]),a("br"),a("span",{staticClass:"line-number"},[t._v("138")]),a("br"),a("span",{staticClass:"line-number"},[t._v("139")]),a("br"),a("span",{staticClass:"line-number"},[t._v("140")]),a("br"),a("span",{staticClass:"line-number"},[t._v("141")]),a("br"),a("span",{staticClass:"line-number"},[t._v("142")]),a("br"),a("span",{staticClass:"line-number"},[t._v("143")]),a("br"),a("span",{staticClass:"line-number"},[t._v("144")]),a("br"),a("span",{staticClass:"line-number"},[t._v("145")]),a("br"),a("span",{staticClass:"line-number"},[t._v("146")]),a("br"),a("span",{staticClass:"line-number"},[t._v("147")]),a("br"),a("span",{staticClass:"line-number"},[t._v("148")]),a("br"),a("span",{staticClass:"line-number"},[t._v("149")]),a("br"),a("span",{staticClass:"line-number"},[t._v("150")]),a("br"),a("span",{staticClass:"line-number"},[t._v("151")]),a("br"),a("span",{staticClass:"line-number"},[t._v("152")]),a("br"),a("span",{staticClass:"line-number"},[t._v("153")]),a("br"),a("span",{staticClass:"line-number"},[t._v("154")]),a("br"),a("span",{staticClass:"line-number"},[t._v("155")]),a("br"),a("span",{staticClass:"line-number"},[t._v("156")]),a("br"),a("span",{staticClass:"line-number"},[t._v("157")]),a("br"),a("span",{staticClass:"line-number"},[t._v("158")]),a("br"),a("span",{staticClass:"line-number"},[t._v("159")]),a("br"),a("span",{staticClass:"line-number"},[t._v("160")]),a("br"),a("span",{staticClass:"line-number"},[t._v("161")]),a("br"),a("span",{staticClass:"line-number"},[t._v("162")]),a("br"),a("span",{staticClass:"line-number"},[t._v("163")]),a("br"),a("span",{staticClass:"line-number"},[t._v("164")]),a("br"),a("span",{staticClass:"line-number"},[t._v("165")]),a("br"),a("span",{staticClass:"line-number"},[t._v("166")]),a("br"),a("span",{staticClass:"line-number"},[t._v("167")]),a("br"),a("span",{staticClass:"line-number"},[t._v("168")]),a("br"),a("span",{staticClass:"line-number"},[t._v("169")]),a("br"),a("span",{staticClass:"line-number"},[t._v("170")]),a("br"),a("span",{staticClass:"line-number"},[t._v("171")]),a("br"),a("span",{staticClass:"line-number"},[t._v("172")]),a("br"),a("span",{staticClass:"line-number"},[t._v("173")]),a("br"),a("span",{staticClass:"line-number"},[t._v("174")]),a("br"),a("span",{staticClass:"line-number"},[t._v("175")]),a("br"),a("span",{staticClass:"line-number"},[t._v("176")]),a("br"),a("span",{staticClass:"line-number"},[t._v("177")]),a("br"),a("span",{staticClass:"line-number"},[t._v("178")]),a("br"),a("span",{staticClass:"line-number"},[t._v("179")]),a("br"),a("span",{staticClass:"line-number"},[t._v("180")]),a("br"),a("span",{staticClass:"line-number"},[t._v("181")]),a("br"),a("span",{staticClass:"line-number"},[t._v("182")]),a("br")])]),a("h1",{attrs:{id:"rabbitmq-高可用集群搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-高可用集群搭建"}},[t._v("#")]),t._v(" RabbitMQ 高可用集群搭建")]),t._v(" "),a("h1",{attrs:{id:"_1-集群简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-集群简介"}},[t._v("#")]),t._v(" 1. 集群简介")]),t._v(" "),a("h2",{attrs:{id:"_1-1-集群架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-集群架构"}},[t._v("#")]),t._v(" 1.1 集群架构")]),t._v(" "),a("p",[t._v("当单台 RabbitMQ 服务器的处理消息的能力达到瓶颈时，此时可以通过 RabbitMQ 集群来进行扩展，从而达到提升吞吐量的目的。RabbitMQ 集群是一个或多个节点的逻辑分组，集群中的每个节点都是对等的，每个节点共享所有的用户，虚拟主机，队列，交换器，绑定关系，运行时参数和其他分布式状态等信息。一个高可用，负载均衡的 RabbitMQ 集群架构应类似下图：\n这里对上面的集群架构做一下解释说明：")]),t._v(" "),a("p",[t._v("首先一个基本的 RabbitMQ 集群不是高可用的，虽然集群共享队列，但在默认情况下，消息只会被路由到某一个节点的符合条件的队列上，并不会同步到其他节点的相同队列上。假设消息路由到 node1 的 my-queue 队列上，但是 node1 突然宕机了，那么消息就会丢失，想要解决这个问题，需要开启队列镜像，将集群中的队列彼此之间进行镜像，此时消息就会被拷贝到处于同一个镜像分组中的所有队列上。")]),t._v(" "),a("p",[t._v("其次 RabbitMQ 集群本身并没有提供负载均衡的功能，也就是说对于一个三节点的集群，每个节点的负载可能都是不相同的，想要解决这个问题可以通过硬件负载均衡或者软件负载均衡的方式，这里我们选择使用 HAProxy 来进行负载均衡，当然也可以使用其他负载均衡中间件，如LVS等。HAProxy 同时支持四层和七层负载均衡，并基于单一进程的事件驱动模型，因此它可以支持非常高的井发连接数。")]),t._v(" "),a("p",[t._v("接着假设我们只采用一台 HAProxy ，那么它就存在明显的单点故障的问题，所以至少需要两台 HAProxy ，同时这两台 HAProxy 之间需要能够自动进行故障转移，通常的解决方案就是 KeepAlived 。KeepAlived 采用 VRRP (Virtual Router Redundancy Protocol，虚拟路由冗余协议) 来解决单点失效的问题，它通常由一组一备两个节点组成，同一时间内只有主节点会提供对外服务，并同时提供一个虚拟的 IP 地址 (Virtual Internet Protocol Address ，简称 VIP) 。 如果主节点故障，那么备份节点会自动接管 VIP 并成为新的主节点 ，直到原有的主节点恢复。")]),t._v(" "),a("p",[t._v("最后，任何想要连接到 RabbitMQ 集群的客户端只需要连接到虚拟 IP，而不必关心集群是何种架构，示例如下：")]),t._v(" "),a("p",[t._v('ConnectionFactory factory = new ConnectionFactory();\n// 假设虚拟ip为 192.168.0.200\nfactory.setHost("192.168.0.200");')]),t._v(" "),a("h2",{attrs:{id:"_1-2-部署情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-部署情况"}},[t._v("#")]),t._v(" 1.2 部署情况")]),t._v(" "),a("p",[t._v("下面我们开始进行搭建，这里我使用三台主机，主机名分别为 rabbit-node2， rabbit-node3 和 rabbit3 ，其功能分配如下：")]),t._v(" "),a("p",[t._v("主机名   IP地址   部署服务     操作系统     配置\nrabbit-node1  192.168.0.12  RabbitMQ + HAProxy + KeepAlived CentOS 7.6    4核8G\nrabbit-node2  192.168.0.14  RabbitMQ + HAProxy + KeepAlived CentOS 7.6    4核8G\nrabbit-node3  192.168.0.15  RabbitMQ     CentOS 7.6    4核8G")]),t._v(" "),a("p",[t._v("以上三台主机上我均已安装好了 RabbitMQ ，关于 RabbitMQ 的安装步骤可以参考：《RabbitMQ单机环境搭建》")]),t._v(" "),a("h1",{attrs:{id:"_2-rabbitmq-集群搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-rabbitmq-集群搭建"}},[t._v("#")]),t._v(" 2. RabbitMQ 集群搭建")]),t._v(" "),a("h2",{attrs:{id:"_2-1-初始化环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-初始化环境"}},[t._v("#")]),t._v(" 2.1  初始化环境")]),t._v(" "),a("p",[t._v("分别修改主机名")]),t._v(" "),a("p",[t._v("hostnamectl set-hostname rabbit-node1\n修改每台机器的 /etc/hosts 文件")]),t._v(" "),a("p",[t._v("cat >> /etc/hosts <<EOF\n192.168.0.12 rabbit-node1\n192.168.0.14 rabbit-node2\n192.168.0.15 rabbit-node3\nEOF")]),t._v(" "),a("p",[t._v("重启虚拟机便于系统识别hosts")]),t._v(" "),a("h1",{attrs:{id:"重启网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启网络"}},[t._v("#")]),t._v(" 重启网络")]),t._v(" "),a("p",[t._v("systemctl restart network\nsetenforce 0")]),t._v(" "),a("h1",{attrs:{id:"重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启"}},[t._v("#")]),t._v(" 重启")]),t._v(" "),a("p",[t._v("init 6")]),t._v(" "),a("h2",{attrs:{id:"_2-2-配置-erlang-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-配置-erlang-cookie"}},[t._v("#")]),t._v(" 2.2 配置 Erlang Cookie")]),t._v(" "),a("p",[t._v("将 rabbit-node1 上的 .erlang.cookie 文件拷贝到其他两台主机上。该 cookie 文件相当于密钥令牌，集群中的 RabbitMQ 节点需要通过交换密钥令牌以获得相互认证，因此处于同一集群的所有节点需要具有相同的密钥令牌，否则在搭建过程中会出现 Authentication Fail 错误。")]),t._v(" "),a("p",[t._v("RabbitMQ 服务启动时，erlang VM 会自动创建该 cookie 文件，默认的存储路径为 /var/lib/rabbitmq/.erlang.cookie 或 $HOME/.erlang.cookie，该文件是一个隐藏文件，需要使用 ls -al 命令查看。（拷贝.cookie时，各节点都必须停止MQ服务）：")]),t._v(" "),a("h1",{attrs:{id:"停止所有服务-构建erlang的集群环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#停止所有服务-构建erlang的集群环境"}},[t._v("#")]),t._v(" 停止所有服务，构建Erlang的集群环境")]),t._v(" "),a("p",[t._v("systemctl stop rabbitmq-server")]),t._v(" "),a("p",[t._v("scp /var/lib/rabbitmq/.erlang.cookie root@rabbit-node2:/var/lib/rabbitmq/\nscp /var/lib/rabbitmq/.erlang.cookie root@rabbit-node3:/var/lib/rabbitmq/")]),t._v(" "),a("p",[t._v("由于你可能在三台主机上使用不同的账户进行操作，为避免后面出现权限不足的问题，这里建议将 cookie 文件原来的 400 权限改为 600，命令如下：")]),t._v(" "),a("p",[t._v("chmod 600 /var/lib/rabbitmq/.erlang.cookie")]),t._v(" "),a("p",[t._v("注：cookie 中的内容就是一行随机字符串，可以使用 cat 命令查看。")]),t._v(" "),a("h2",{attrs:{id:"_2-3-启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-启动服务"}},[t._v("#")]),t._v(" 2.3 启动服务")]),t._v(" "),a("p",[t._v("在三台主机上均执行以下命令，启动 RabbitMQ 服务：")]),t._v(" "),a("p",[t._v("systemctl start rabbitmq-server")]),t._v(" "),a("p",[t._v("开通 EPMD 端口")]),t._v(" "),a("p",[t._v("epmd进程使用的端口。用于RabbitMQ节点和CLI工具的端点发现服务。")]),t._v(" "),a("h1",{attrs:{id:"开启防火墙-4369-端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启防火墙-4369-端口"}},[t._v("#")]),t._v(" 开启防火墙 4369 端口")]),t._v(" "),a("p",[t._v("firewall-cmd --zone=public --add-port=4369/tcp --permanent")]),t._v(" "),a("h1",{attrs:{id:"重启-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启-2"}},[t._v("#")]),t._v(" 重启")]),t._v(" "),a("p",[t._v("systemctl restart firewalld.service")]),t._v(" "),a("h2",{attrs:{id:"_2-4-集群搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-集群搭建"}},[t._v("#")]),t._v(" 2.4 集群搭建")]),t._v(" "),a("p",[t._v("RabbitMQ 集群的搭建需要选择其中任意一个节点为基准，将其它节点逐步加入。这里我们以 rabbit-node1 为基准节点，将 rabbit-node2 和 rabbit-node3 加入集群。在 rabbit-node2 和rabbit-node3 上执行以下命令：")]),t._v(" "),a("p",[t._v("1.停止服务")]),t._v(" "),a("p",[t._v("rabbitmqctl stop_app")]),t._v(" "),a("p",[t._v("2.重置状态")]),t._v(" "),a("p",[t._v("rabbitmqctl reset")]),t._v(" "),a("p",[t._v("3.节点加入, 在一个node加入cluster之前，必须先停止该node的rabbitmq应用，即先执行stop_app")]),t._v(" "),a("p",[t._v("rabbit-node2加入node1, rabbit-node3加入node2")]),t._v(" "),a("p",[t._v("rabbitmqctl join_cluster rabbit@rabbit-node1")]),t._v(" "),a("p",[t._v("4.启动服务")]),t._v(" "),a("p",[t._v("rabbitmqctl start_app")]),t._v(" "),a("p",[t._v("join_cluster 命令有一个可选的参数 --ram ，该参数代表新加入的节点是内存节点，默认是磁盘节点。如果是内存节点，则所有的队列、交换器、绑定关系、用户、访问权限和 vhost 的元数据都将存储在内存中，如果是磁盘节点，则存储在磁盘中。内存节点可以有更高的性能，但其重启后所有配置信息都会丢失，因此RabbitMQ 要求在集群中至少有一个磁盘节点，其他节点可以是内存节点。当内存节点离开集群时，它可以将变更通知到至少一个磁盘节点；然后在其重启时，再连接到磁盘节点上获取元数据信息。除非是将 RabbitMQ 用于 RPC 这种需要超低延迟的场景，否则在大多数情况下，RabbitMQ 的性能都是够用的，可以采用默认的磁盘节点的形式。这里为了演示， rabbit-node3 我就设置为内存节点。")]),t._v(" "),a("p",[t._v("另外，如果节点以磁盘节点的形式加入，则需要先使用 reset 命令进行重置，然后才能加入现有群集，重置节点会删除该节点上存在的所有的历史资源和数据。采用内存节点的形式加入时可以略过 reset 这一步，因为内存上的数据本身就不是持久化的。")]),t._v(" "),a("h2",{attrs:{id:"_2-5-查看集群状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-查看集群状态"}},[t._v("#")]),t._v(" 2.5 查看集群状态")]),t._v(" "),a("p",[t._v("2.5.1 命令行查看\n在 rabbit-node3 和 3 上执行以上命令后，集群就已经搭建成功，此时可以在任意节点上使用 rabbitmqctl cluster_status 命令查看集群状态，输出如下：")]),t._v(" "),a("p",[t._v("[root@rabbit-node1 keepalived]# rabbitmqctl cluster_status\nCluster status of node rabbit@rabbit-node1 ...\n[{nodes,[{disc,['rabbit@rabbit-node1','rabbit@rabbit-node2',\n'rabbit@rabbit-node3']}]},\n{running_nodes,['rabbit@rabbit-node3','rabbit@rabbit-node2',\n'rabbit@rabbit-node1']},\n{cluster_name,<<\"rabbit@rabbit-node1\">>},\n{partitions,[]},\n{alarms,[{'rabbit@rabbit-node3',[]},\n{'rabbit@rabbit-node2',[]},\n{'rabbit@rabbit-node1',[]}]}]")]),t._v(" "),a("p",[t._v("可以看到 nodes 下显示了全部节点的信息，其中 rabbit-node2 和 rabbit3 上的节点都是 disc 类型，即磁盘节点；而 rabbit-node3 上的节点为 ram，即内存节点。此时代表集群已经搭建成功，默认的 cluster_name 名字为 rabbit@rabbit-node1，如果你想进行修改，可以使用以下命令：")]),t._v(" "),a("p",[t._v("rabbitmqctl set_cluster_name my_rabbitmq_cluster")]),t._v(" "),a("p",[t._v("2.5.2 UI 界面查看\n除了可以使用命令行外，还可以使用打开任意节点的 UI 界面进行查看，情况如下：")]),t._v(" "),a("h2",{attrs:{id:"_2-6-配置镜像队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-配置镜像队列"}},[t._v("#")]),t._v(" 2.6 配置镜像队列")]),t._v(" "),a("p",[t._v("2.6.1 开启镜像队列\n这里我们为所有队列开启镜像配置，其语法如下：")]),t._v(" "),a("p",[t._v('rabbitmqctl set_policy ha-all "^" \'{"ha-mode":"all"}\'')]),t._v(" "),a("p",[t._v("2.6.2 复制系数\n在上面我们指定了 ha-mode 的值为 all ，代表消息会被同步到所有节点的相同队列中。这里我们之所以这样配置，因为我们本身只有三个节点，因此复制操作的性能开销比较小。如果你的集群有很多节点，那么此时复制的性能开销就比较大，此时需要选择合适的复制系数。通常可以遵循过半写原则，即对于一个节点数为 n 的集群，只需要同步到 n/2+1 个节点上即可。此时需要同时修改镜像策略为 exactly，并指定复制系数 ha-params，示例命令如下：")]),t._v(" "),a("p",[t._v('rabbitmqctl set_policy ha-two "^" \'{"ha-mode":"exactly","ha-params":2,"ha-sync-mode":"automatic"}\'')]),t._v(" "),a("p",[t._v("除此之外，RabbitMQ 还支持使用正则表达式来过滤需要进行镜像操作的队列，示例如下：")]),t._v(" "),a("p",[t._v('rabbitmqctl set_policy ha-all "^ha." \'{"ha-mode":"all"}\'')]),t._v(" "),a("p",[t._v("此时只会对 ha 开头的队列进行镜像。更多镜像队列的配置说明，可以参考官方文档：Highly Available (Mirrored) Queues")]),t._v(" "),a("p",[t._v("2.6.3 查看镜像状态\n配置完成后，可以通过 Web UI 界面查看任意队列的镜像状态，情况如下：")]),t._v(" "),a("h2",{attrs:{id:"_2-7-集群的关闭与重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-集群的关闭与重启"}},[t._v("#")]),t._v(" 2.7 集群的关闭与重启")]),t._v(" "),a("p",[t._v("没有一个直接的命令可以关闭整个集群，需要逐一进行关闭。但是需要保证在重启时，最后关闭的节点最先被启动。如果第一个启动的不是最后关闭的节点，那么这个节点会等待最后关闭的那个节点启动，默认进行 10 次连接尝试，超时时间为 30 秒，如果依然没有等到，则该节点启动失败。")]),t._v(" "),a("p",[t._v("这带来的一个问题是，假设在一个三节点的集群当中，关闭的顺序为 node1，node2，node3，如果 node1 因为故障暂时没法恢复，此时 node2 和 node3 就无法启动。想要解决这个问题，可以先将 node1 节点进行剔除，命令如下：")]),t._v(" "),a("p",[t._v("rabbitmqctl forget_cluster_node rabbit@node1 --offline")]),t._v(" "),a("p",[t._v("此时需要加上 -offline 参数，它允许节点在自身没有启动的情况下将其他节点剔除。")]),t._v(" "),a("h2",{attrs:{id:"_2-8-解除集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-解除集群"}},[t._v("#")]),t._v(" 2.8 解除集群")]),t._v(" "),a("p",[t._v("重置当前节点")]),t._v(" "),a("p",[t._v("1.停止服务")]),t._v(" "),a("p",[t._v("rabbitmqctl stop_app")]),t._v(" "),a("p",[t._v("2.重置集群状态")]),t._v(" "),a("p",[t._v("rabbitmqctl reset")]),t._v(" "),a("p",[t._v("3.重启服务")]),t._v(" "),a("p",[t._v("rabbitmqctl start_app")]),t._v(" "),a("p",[t._v("重新加入集群")]),t._v(" "),a("p",[t._v("1.停止服务")]),t._v(" "),a("p",[t._v("rabbitmqctl stop_app")]),t._v(" "),a("p",[t._v("2.重置状态")]),t._v(" "),a("p",[t._v("rabbitmqctl reset")]),t._v(" "),a("p",[t._v("3.节点加入")]),t._v(" "),a("p",[t._v("rabbitmqctl join_cluster rabbit@rabbit-node1")]),t._v(" "),a("p",[t._v("4.重启服务")]),t._v(" "),a("p",[t._v("rabbitmqctl start_app")]),t._v(" "),a("p",[t._v("完成后重新检查 RabbitMQ 集群状态")]),t._v(" "),a("p",[t._v("rabbitmqctl cluster_status")]),t._v(" "),a("p",[t._v("除了在当前节点重置集群外，还可在集群其他正常节点将节点踢出集群")]),t._v(" "),a("p",[t._v("rabbitmqctl forget_cluster_node rabbit@rabbit-node3")]),t._v(" "),a("h2",{attrs:{id:"_2-9-变更节点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-变更节点类型"}},[t._v("#")]),t._v(" 2.9  变更节点类型")]),t._v(" "),a("p",[t._v("我们可以将节点的类型从RAM更改为Disk，反之亦然。假设我们想要反转rabbit@rabbit-node2和rabbit@rabbit-node1的类型，将前者从RAM节点转换为磁盘节点，而后者从磁盘节点转换为RAM节点。为此，我们可以使用change_cluster_node_type命令。必须首先停止节点。")]),t._v(" "),a("p",[t._v("1.停止服务")]),t._v(" "),a("p",[t._v("rabbitmqctl stop_app")]),t._v(" "),a("p",[t._v("2.变更类型 ram disc")]),t._v(" "),a("p",[t._v("rabbitmqctl change_cluster_node_type disc")]),t._v(" "),a("p",[t._v("3.重启服务")]),t._v(" "),a("p",[t._v("rabbitmqctl start_app")]),t._v(" "),a("p",[t._v("2.10 清除 RabbitMQ 节点配置")]),t._v(" "),a("p",[t._v("如果遇到不能正常退出直接kill进程")]),t._v(" "),a("p",[t._v("systemctl stop rabbitmq-server")]),t._v(" "),a("p",[t._v("查看进程")]),t._v(" "),a("p",[t._v("ps aux|grep rabbitmq")]),t._v(" "),a("p",[t._v("清楚节点rabbitmq配置")]),t._v(" "),a("p",[t._v("rm -rf /var/lib/rabbitmq/mnesia")]),t._v(" "),a("h1",{attrs:{id:"_3-haproxy-环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-haproxy-环境搭建"}},[t._v("#")]),t._v(" 3. HAProxy 环境搭建")]),t._v(" "),a("p",[t._v("yum 源安装目前版本比较低，采用源码安装方式。")]),t._v(" "),a("h2",{attrs:{id:"_3-1-下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-下载"}},[t._v("#")]),t._v(" 3.1 下载")]),t._v(" "),a("p",[t._v("HAProxy 官方下载地址为：www.haproxy.org/#down ，如果这个网站无法访问，也可以从 src.fedoraproject.org/repo/pkgs/h… 上进行下载。这里我下载的是 2.x 的版本，下载后进行解压：")]),t._v(" "),a("p",[t._v("tar -zxvf haproxy-2.1.8.tar.gz")]),t._v(" "),a("h2",{attrs:{id:"_3-2-编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-编译"}},[t._v("#")]),t._v(" 3.2  编译")]),t._v(" "),a("p",[t._v("进入解压后根目录，执行下面的编译命令：")]),t._v(" "),a("p",[t._v("make TARGET=linux-glibc PREFIX=/usr/local/haproxy-2.1.8\nmake install PREFIX=/usr/local/haproxy-2.1.8")]),t._v(" "),a("h2",{attrs:{id:"_3-3-配置环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-配置环境变量"}},[t._v("#")]),t._v(" 3.3 配置环境变量")]),t._v(" "),a("p",[t._v("配置环境变量：")]),t._v(" "),a("p",[t._v("vim /etc/profile")]),t._v(" "),a("p",[t._v("export HAPROXY_HOME=/usr/local/haproxy-2.1.8\nexport PATH=$PATH:$HAPROXY_HOME/sbin")]),t._v(" "),a("p",[t._v("使得配置的环境变量立即生效：")]),t._v(" "),a("p",[t._v("source /etc/profile")]),t._v(" "),a("p",[t._v("检查安装是否成功：")]),t._v(" "),a("p",[t._v("[root@rabbit-node1 haproxy-2.1.8]# haproxy -v\nHA-Proxy version 2.1.8 2020/07/31 - https://haproxy.org/\nStatus: stable branch - will stop receiving fixes around Q1 2021.\nKnown bugs: http://www.haproxy.org/bugs/bugs-2.1.8.html\nRunning on: Linux 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64")]),t._v(" "),a("h2",{attrs:{id:"_3-4-负载均衡配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-负载均衡配置"}},[t._v("#")]),t._v(" 3.4  负载均衡配置")]),t._v(" "),a("p",[t._v("新建配置文件 haproxy.cfg，这里我新建的位置为：/etc/haproxy/haproxy.cfg。")]),t._v(" "),a("p",[t._v("创建目录")]),t._v(" "),a("p",[t._v("mkdir /etc/haproxy")]),t._v(" "),a("p",[t._v("编辑文件内容")]),t._v(" "),a("p",[t._v("vim /etc/haproxy/haproxy.cfg")]),t._v(" "),a("p",[t._v("文件内容如下：")]),t._v(" "),a("p",[t._v("全局配置")]),t._v(" "),a("p",[t._v("global")]),t._v(" "),a("p",[t._v("日志输出配置、所有日志都记录在本机，通过 local0 进行输出")]),t._v(" "),a("p",[t._v("log 127.0.0.1 local0 info")]),t._v(" "),a("p",[t._v("最大连接数")]),t._v(" "),a("p",[t._v("maxconn 4096")]),t._v(" "),a("p",[t._v("改变当前的工作目录")]),t._v(" "),a("p",[t._v("chroot /usr/local/haproxy-2.1.8")]),t._v(" "),a("p",[t._v("以指定的 UID 运行 haproxy 进程")]),t._v(" "),a("p",[t._v("uid 99")]),t._v(" "),a("p",[t._v("以指定的 GID 运行 haproxy 进程")]),t._v(" "),a("p",[t._v("gid 99")]),t._v(" "),a("p",[t._v("以守护进行的方式运行")]),t._v(" "),a("p",[t._v("daemon")]),t._v(" "),a("p",[t._v("当前进程的 pid 文件存放位置")]),t._v(" "),a("p",[t._v("pidfile /usr/local/haproxy-2.1.8/haproxy.pid")]),t._v(" "),a("p",[t._v("默认配置")]),t._v(" "),a("p",[t._v("defaults")]),t._v(" "),a("p",[t._v("应用全局的日志配置")]),t._v(" "),a("p",[t._v("log global")]),t._v(" "),a("p",[t._v('使用4层代理模式，7层代理模式则为"http"')]),t._v(" "),a("p",[t._v("mode tcp")]),t._v(" "),a("p",[t._v("日志类别")]),t._v(" "),a("p",[t._v("option tcplog")]),t._v(" "),a("p",[t._v("不记录健康检查的日志信息")]),t._v(" "),a("p",[t._v("option dontlognull")]),t._v(" "),a("p",[t._v("3次失败则认为服务不可用")]),t._v(" "),a("p",[t._v("retries 3")]),t._v(" "),a("p",[t._v("每个进程可用的最大连接数")]),t._v(" "),a("p",[t._v("maxconn 2000")]),t._v(" "),a("p",[t._v("连接超时")]),t._v(" "),a("p",[t._v("timeout connect 5s")]),t._v(" "),a("p",[t._v("客户端超时")]),t._v(" "),a("p",[t._v("timeout client 120s")]),t._v(" "),a("p",[t._v("服务端超时")]),t._v(" "),a("p",[t._v("timeout server 120s")]),t._v(" "),a("p",[t._v("绑定配置")]),t._v(" "),a("p",[t._v("listen rabbitmq_cluster\nbind :5671")]),t._v(" "),a("p",[t._v("配置TCP模式")]),t._v(" "),a("p",[t._v("mode tcp")]),t._v(" "),a("p",[t._v("采用加权轮询的机制进行负载均衡")]),t._v(" "),a("p",[t._v("balance roundrobin")]),t._v(" "),a("p",[t._v("RabbitMQ 集群节点配置")]),t._v(" "),a("p",[t._v("server mq-node1 rabbit-node1:5672 check inter 5000 rise 2 fall 3 weight 1\nserver mq-node2 rabbit-node2:5672 check inter 5000 rise 2 fall 3 weight 1\nserver mq-node3 rabbit-node3:5672 check inter 5000 rise 2 fall 3 weight 1")]),t._v(" "),a("p",[t._v("配置监控页面")]),t._v(" "),a("p",[t._v("listen monitor\nbind :8100\nmode http\noption httplog\nstats enable\nstats uri /stats\nstats refresh 5s")]),t._v(" "),a("p",[t._v("负载均衡的主要配置在 listen rabbitmq_cluster 下，这里指定负载均衡的方式为加权轮询，同时定义好健康检查机制：")]),t._v(" "),a("p",[t._v("server node1 rabbit-node1:5672 check inter 5000 rise 2 fall 3 weight 1")]),t._v(" "),a("p",[t._v("以上配置代表对地址为 rabbit-node1:5672 的 node1 节点每隔 5 秒进行一次健康检查，如果连续两次的检查结果都是正常，则认为该节点可用，此时可以将客户端的请求轮询到该节点上；如果连续 3 次的检查结果都不正常，则认为该节点不可用。weight 用于指定节点在轮询过程中的权重。")]),t._v(" "),a("h2",{attrs:{id:"_3-5-启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-启动服务"}},[t._v("#")]),t._v(" 3.5  启动服务")]),t._v(" "),a("p",[t._v("以上搭建步骤在 rabbit-node1 和 rabbit-node2 上完全相同，搭建完成使用以下命令启动服务：")]),t._v(" "),a("p",[t._v("启动")]),t._v(" "),a("p",[t._v("haproxy -f /etc/haproxy/haproxy.cfg")]),t._v(" "),a("p",[t._v("查看运行")]),t._v(" "),a("p",[t._v("ps aux|grep haproxy")]),t._v(" "),a("p",[t._v("停止 没有killall命令, 安装yum -y install psmisc")]),t._v(" "),a("p",[t._v("killall haproxy")]),t._v(" "),a("p",[t._v("开启监控页面访问端口")]),t._v(" "),a("p",[t._v("firewall-cmd --zone=public --add-port=8100/tcp --permanent\nsystemctl restart firewalld.service")]),t._v(" "),a("p",[t._v("启动后可以在监控页面进行查看，端口为设置的 8100，完整地址为：http://rabbit-node1:8100/stats ，页面情况如下：")]),t._v(" "),a("p",[t._v("所有节点都为绿色，代表节点健康。此时证明 HAProxy 搭建成功，并已经对 RabbitMQ 集群进行监控。")]),t._v(" "),a("h1",{attrs:{id:"_4-keepalived-环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-keepalived-环境搭建"}},[t._v("#")]),t._v(" 4.  Keepalived 环境搭建")]),t._v(" "),a("p",[t._v("接着就可以搭建 Keepalived 来解决 HAProxy 故障转移的问题。这里我在 rabbit-node1 和 rabbit-node2上安装 KeepAlived ，两台主机上的搭建的步骤完全相同，只是部分配置略有不同，具体如下：")]),t._v(" "),a("p",[t._v("环境说明\nName    IP Addr   Service Name Descprition\nVIP  192.168.0.200     虚拟 IP\nMASTER  192.168.0.12  rabbit-node1  主服务器 IP\nBACKUP  192.168.0.14  rabbit-node2  备服务器 IP")]),t._v(" "),a("h2",{attrs:{id:"_4-1-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-安装"}},[t._v("#")]),t._v(" 4.1  安装")]),t._v(" "),a("p",[t._v("Keepalived 可以使用 yum 直接安装，在 MASTER 服务器和 BACKUP 服务器执行：")]),t._v(" "),a("p",[t._v("yum -y install keepalived")]),t._v(" "),a("h2",{attrs:{id:"_4-2-配置-master-和-backup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-配置-master-和-backup"}},[t._v("#")]),t._v(" 4.2  配置 MASTER 和 BACKUP")]),t._v(" "),a("p",[t._v("确认网卡\n[root@rabbit-node1 ~]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\nlink/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\ninet 127.0.0.1/8 scope host lo\nvalid_lft forever preferred_lft forever\ninet6 ::1/128 scope host\nvalid_lft forever preferred_lft forever\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\nlink/ether fa:16:3e:52:87:80 brd ff:ff:ff:ff:ff:ff\ninet 192.168.0.12/24 brd 192.168.0.255 scope global noprefixroute eth0\nvalid_lft forever preferred_lft forever\ninet 192.168.0.200/32 scope global eth0\nvalid_lft forever preferred_lft forever\ninet6 fe80::f816:3eff:fe52:8780/64 scope link\nvalid_lft forever preferred_lft forever\n[root@rabbit-node1 ~]#")]),t._v(" "),a("p",[t._v("本例使用 eth0 这块网卡。")]),t._v(" "),a("p",[t._v("vim /etc/keepalived/keepalived.conf")]),t._v(" "),a("p",[t._v("MASTER 节点配置\n完整配置如下：")]),t._v(" "),a("p",[t._v("global_defs {")]),t._v(" "),a("p",[t._v("路由id,主备节点不能相同")]),t._v(" "),a("p",[t._v("router_id node1")]),t._v(" "),a("p",[t._v("notification_email {")]),t._v(" "),a("p",[t._v("email 接收方")]),t._v(" "),a("p",[t._v("acassen@firewall.loc\nfailover@firewall.loc\nsysadmin@firewall.loc\n}")]),t._v(" "),a("p",[t._v("email 发送方")]),t._v(" "),a("p",[t._v("notification_email_from Alexandre.Cassen@firewall.loc")]),t._v(" "),a("p",[t._v("邮件服务器, smtp 协议")]),t._v(" "),a("p",[t._v("smtp_server 192.168.200.1\nsmtp_connect_timeout 30")]),t._v(" "),a("p",[t._v("vrrp_skip_check_adv_addr")]),t._v(" "),a("p",[t._v("使用 unicast_src_ip 需要注释 vrrp_strict，而且也可以进行 ping 测试")]),t._v(" "),a("p",[t._v("#vrrp_strict\nvrrp_garp_interval 0\nvrrp_gna_interval 0\n}")]),t._v(" "),a("p",[t._v("自定义监控脚本")]),t._v(" "),a("p",[t._v("vrrp_script chk_haproxy {")]),t._v(" "),a("p",[t._v("脚本位置")]),t._v(" "),a("p",[t._v('script "/etc/keepalived/haproxy_check.sh"')]),t._v(" "),a("p",[t._v("脚本执行的时间间隔")]),t._v(" "),a("p",[t._v("interval 5\nweight 10\n}")]),t._v(" "),a("p",[t._v("vrrp_instance VI_1 {")]),t._v(" "),a("p",[t._v("Keepalived的角色，MASTER 表示主节点，BACKUP 表示备份节点")]),t._v(" "),a("p",[t._v("state MASTER")]),t._v(" "),a("p",[t._v("指定监测的网卡，可以使用 ifconfig 进行查看")]),t._v(" "),a("p",[t._v("interface eth0")]),t._v(" "),a("p",[t._v("虚拟路由的id，主备节点需要设置为相同")]),t._v(" "),a("p",[t._v("virtual_router_id 51")]),t._v(" "),a("p",[t._v("优先级，主节点的优先级需要设置比备份节点高")]),t._v(" "),a("p",[t._v("priority 100")]),t._v(" "),a("p",[t._v("设置主备之间的检查时间，单位为秒")]),t._v(" "),a("p",[t._v("advert_int 1")]),t._v(" "),a("p",[t._v("如果两节点的上联交换机禁用了组播，则采用 vrrp 单播通告的方式")]),t._v(" "),a("p",[t._v("unicast_src_ip 192.168.0.12\nunicast_peer {\n192.168.0.14\n}")]),t._v(" "),a("p",[t._v("定义验证类型和密码")]),t._v(" "),a("p",[t._v("authentication {\nauth_type PASS\nauth_pass 123456\n}")]),t._v(" "),a("p",[t._v("调用上面自定义的监控脚本")]),t._v(" "),a("p",[t._v("track_script {\nchk_haproxy\n}")]),t._v(" "),a("p",[t._v("virtual_ipaddress {\n# 虚拟IP地址，可以设置多个\n192.168.0.200\n}\n}")]),t._v(" "),a("p",[t._v("备份节点的配置与主节点基本相同，但是需要修改其 state 为 BACKUP；同时其优先级 priority 需要比主节点低。")]),t._v(" "),a("p",[t._v("BACKUP 节点配置\n完整配置如下：")]),t._v(" "),a("p",[t._v("global_defs {")]),t._v(" "),a("p",[t._v("路由id,主备节点不能相同")]),t._v(" "),a("p",[t._v("router_id node2")]),t._v(" "),a("p",[t._v("notification_email {")]),t._v(" "),a("p",[t._v("email 接收方")]),t._v(" "),a("p",[t._v("acassen@firewall.loc\nfailover@firewall.loc\nsysadmin@firewall.loc\n}")]),t._v(" "),a("p",[t._v("email 发送方")]),t._v(" "),a("p",[t._v("notification_email_from Alexandre.Cassen@firewall.loc")]),t._v(" "),a("p",[t._v("邮件服务器, smtp 协议")]),t._v(" "),a("p",[t._v("smtp_server 192.168.200.1\nsmtp_connect_timeout 30")]),t._v(" "),a("p",[t._v("vrrp_skip_check_adv_addr")]),t._v(" "),a("p",[t._v("使用 unicast_src_ip 需要注释 vrrp_strict，而且也可以进行 ping 测试")]),t._v(" "),a("p",[t._v("#vrrp_strict\nvrrp_garp_interval 0\nvrrp_gna_interval 0\n}")]),t._v(" "),a("p",[t._v('vrrp_script chk_haproxy {\nscript "/etc/keepalived/haproxy_check.sh"\ninterval 5\nweight 10\n}')]),t._v(" "),a("p",[t._v("vrrp_instance VI_1 {")]),t._v(" "),a("p",[t._v("BACKUP 表示备份节点")]),t._v(" "),a("p",[t._v("state BACKUP")]),t._v(" "),a("p",[t._v("指定监测的网卡")]),t._v(" "),a("p",[t._v("interface eth0")]),t._v(" "),a("p",[t._v("虚拟路由的id，主备节点需要设置为相同")]),t._v(" "),a("p",[t._v("virtual_router_id 51")]),t._v(" "),a("p",[t._v("优先级，备份节点要比主节点低")]),t._v(" "),a("p",[t._v("priority 50")]),t._v(" "),a("p",[t._v("advert_int 1")]),t._v(" "),a("p",[t._v("如果两节点的上联交换机禁用了组播，则采用 vrrp 单播通告的方式")]),t._v(" "),a("p",[t._v("unicast_src_ip 192.168.0.14\nunicast_peer {\n192.168.0.12\n}")]),t._v(" "),a("p",[t._v("authentication {\nauth_type PASS\nauth_pass 123456\n}")]),t._v(" "),a("p",[t._v("track_script {\nchk_haproxy\n}")]),t._v(" "),a("p",[t._v("virtual_ipaddress {\n192.168.0.200\n}\n}")]),t._v(" "),a("p",[t._v("注意以下几点")]),t._v(" "),a("p",[t._v("state 角色为 BACKUP\ninterface 为网卡的 ID，要根据机器确认\nvirtual_route_id 要与 MASTER 一致，默认为 51\npriority 要比 MASTER 小\nunicast_src_ip 要设置正确，组播地址设置之后，要注释 vrrp_strict 选项")]),t._v(" "),a("h2",{attrs:{id:"_4-3-配置-haproxy-检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-配置-haproxy-检查"}},[t._v("#")]),t._v(" 4.3 配置 HAProxy 检查")]),t._v(" "),a("p",[t._v("以上配置定义了 Keepalived 的 MASTER 节点和 BACKUP 节点，并设置对外提供服务的虚拟 IP 为 192.168.0.200。此外最主要的是定义了通过 haproxy_check.sh 来对 HAProxy 进行监控，这个脚本需要我们自行创建，内容如下：")]),t._v(" "),a("p",[t._v("vim /etc/keepalived/haproxy_check.sh")]),t._v(" "),a("p",[t._v("#!/bin/bash")]),t._v(" "),a("p",[t._v("判断haproxy是否已经启动")]),t._v(" "),a("p",[t._v("if [ ${ps -C haproxy --no-header |wc -l} -eq 0 ] ; then\n#如果没有启动，则启动\nhaproxy -f /etc/haproxy/haproxy.cfg\nfi")]),t._v(" "),a("p",[t._v("#睡眠3秒以便haproxy完全启动\nsleep 3")]),t._v(" "),a("p",[t._v("#如果haproxy还是没有启动，此时需要将本机的keepalived服务停掉，以便让VIP自动漂移到另外一台haproxy\nif [ ${ps -C haproxy --no-header |wc -l} -eq 0 ] ; then\nsystemctl stop keepalived\nfi")]),t._v(" "),a("p",[t._v("创建后为其赋予执行权限")]),t._v(" "),a("p",[t._v("chmod +x /etc/keepalived/haproxy_check.sh")]),t._v(" "),a("p",[t._v("这个脚本主要用于判断 HAProxy 服务是否正常，如果不正常且无法启动，此时就需要将本机 Keepalived 关闭，从而让虚拟 IP 漂移到备份节点。")]),t._v(" "),a("h2",{attrs:{id:"_4-4-配置并启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-配置并启动服务"}},[t._v("#")]),t._v(" 4.4 配置并启动服务")]),t._v(" "),a("p",[t._v("配置 IP 转发，需要修改配置文件 /etc/sysctl.conf，默认只有 root 可以修改，分别在 MASTER 和 BACKUP上修改。")]),t._v(" "),a("p",[t._v("切换用户")]),t._v(" "),a("p",[t._v("su -root")]),t._v(" "),a("p",[t._v("文件配置")]),t._v(" "),a("p",[t._v('echo "net.ipv4.ip_nonlocal_bind = 1" >> /etc/sysctl.conf')]),t._v(" "),a("p",[t._v("生效")]),t._v(" "),a("p",[t._v("sysctl -p\nrabbit-node1 和 rabbit-node2 上启动 KeepAlived 服务，命令如下：")]),t._v(" "),a("p",[t._v("systemctl start keepalived")]),t._v(" "),a("p",[t._v("设置开机自动启")]),t._v(" "),a("p",[t._v("systemctl enable keepalived")]),t._v(" "),a("p",[t._v("启动后此时 rabbit-node1 为主节点，可以在 rabbit-node1 上使用 ip a 命令查看到虚拟 IP 的情况：")]),t._v(" "),a("p",[t._v("此时只有 rabbit-node1 上是存在虚拟 IP 的，而 rabbit-node2 上是没有的。")]),t._v(" "),a("p",[t._v("漂移规则如下：")]),t._v(" "),a("p",[t._v("默认使用 MASTER 服务器（192.168.0.12），虚拟 IP 为 192.168.0.200，此时 MASTER 服务器会有 2 个IP。\n当 MASTER 出问题时，IP 会漂移到 BACKUP 服务器（192.168.0.14），此时 BACKUP 服务器会有 2 个IP。\n当 MASTER 重新启动后，虚拟 IP 又会漂移回 MASTER 服务器。")]),t._v(" "),a("h2",{attrs:{id:"_4-5-验证故障转移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-验证故障转移"}},[t._v("#")]),t._v(" 4.5 验证故障转移")]),t._v(" "),a("p",[t._v("这里我们验证一下故障转移，因为按照我们上面的检测脚本，如果 HAProxy 已经停止且无法重启时 KeepAlived 服务就会停止，这里我们直接使用以下工具进行验证。")]),t._v(" "),a("p",[t._v("安装 tcpdump 包")]),t._v(" "),a("p",[t._v("yum -y install tcpdump")]),t._v(" "),a("p",[t._v("在 MASTER 服务器上执行")]),t._v(" "),a("p",[t._v("[root@rabbit-node1 ~]# tcpdump -i eth0 vrrp -n\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes\n23:42:48.521201 IP 192.168.0.12 > 192.168.0.14: VRRPv2, Advertisement, vrid 51, prio 100, authtype simple, intvl 1s, length 20\n23:42:49.522332 IP 192.168.0.12 > 192.168.0.14: VRRPv2, Advertisement, vrid 51, prio 100, authtype simple, intvl 1s, length 20\n23:42:50.523458 IP 192.168.0.12 > 192.168.0.14: VRRPv2, Advertisement, vrid 51, prio 100, authtype simple, intvl 1s, length 20\n23:42:51.524597 IP 192.168.0.12 > 192.168.0.14: VRRPv2, Advertisement, vrid 51, prio 100, authtype simple, intvl 1s, length 20\n...\n...")]),t._v(" "),a("p",[t._v("这表明 MASTER 在向 BACKUP 广播，MASTER 在线。此时虚拟 IP 时挂在 MASTER 上的，如果想退出, 按 Ctrl+C。")]),t._v(" "),a("p",[t._v("如果 MASTER 停止 keepalived，虚拟 IP 会漂移到 BACKUP 服务器上。\n我们可以测试一下：")]),t._v(" "),a("p",[t._v("首先，停止 MASTER 的 keepalived")]),t._v(" "),a("p",[t._v("systemctl stop keepalived")]),t._v(" "),a("p",[t._v("然后，在 MASTER 服务器上查看 VRRP 服务")]),t._v(" "),a("p",[t._v("[root@rabbit-node1 ~]# tcpdump -i eth0 vrrp -n\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes\n23:44:19.297025 IP 192.168.0.14 > 192.168.0.12: VRRPv2, Advertisement, vrid 51, prio 99, authtype simple, intvl 1s, length 20\n23:44:20.297257 IP 192.168.0.14 > 192.168.0.12: VRRPv2, Advertisement, vrid 51, prio 99, authtype simple, intvl 1s, length 20\n23:44:21.297652 IP 192.168.0.14 > 192.168.0.12: VRRPv2, Advertisement, vrid 51, prio 99, authtype simple, intvl 1s, length 20\n23:44:22.297348 IP 192.168.0.14 > 192.168.0.12: VRRPv2, Advertisement, vrid 51, prio 99, authtype simple, intvl 1s, length 20\n...\n...")]),t._v(" "),a("p",[t._v("这表明 MASTER 收到 BACKUP 的广播，此时虚拟 IP 时挂在 BACKUP 服务器上。")]),t._v(" "),a("p",[t._v("此时再次使用 ip a 分别查看，可以发现 MASTER 上的 VIP 已经漂移到 BACKUP 上，情况如下：")]),t._v(" "),a("p",[t._v("再次重启 MASTER 服务器，会发现 VIP 又重新漂移回 MASTER 服务器。")]),t._v(" "),a("p",[t._v("此时对外服务的 VIP 依然可用，代表已经成功地进行了故障转移。至此集群已经搭建成功，任何需要发送或者接受消息的客户端服务只需要连接到该 VIP 即可，示例如下：")]),t._v(" "),a("p",[t._v('ConnectionFactory factory = new ConnectionFactory();\nfactory.setHost("192.168.0.200");')]),t._v(" "),a("h2",{attrs:{id:"_4-6-配置日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-配置日志"}},[t._v("#")]),t._v(" 4.6  配置日志")]),t._v(" "),a("p",[t._v("注意")]),t._v(" "),a("p",[t._v("此配置为可选步骤。")]),t._v(" "),a("p",[t._v("keepalived 默认将日志输出到系统日志/var/log/messages中，因为系统日志很多，查询问题时相对麻烦。")]),t._v(" "),a("p",[t._v("我们可以将 keepalived 的日志单独拿出来，这需要修改日志输出路径。")]),t._v(" "),a("p",[t._v("修改 Keepalived 配置")]),t._v(" "),a("p",[t._v("vim /etc/sysconfig/keepalived")]),t._v(" "),a("p",[t._v("更改如下：")]),t._v(" "),a("p",[t._v("Options for keepalived. See `keepalived --help' output and keepalived(8) and")]),t._v(" "),a("p",[t._v("keepalived.conf(5) man pages for a list of all options. Here are the most")]),t._v(" "),a("p",[t._v("common ones :")]),t._v(" "),a("h1",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("p",[t._v("--vrrp        -P  Only run with VRRP subsystem.")]),t._v(" "),a("p",[t._v("--check       -C  Only run with Health-checker subsystem.")]),t._v(" "),a("p",[t._v("--dont-release-vrrp -V  Dont remove VRRP VIPs & VROUTEs on daemon stop.")]),t._v(" "),a("p",[t._v("--dont-release-ipvs -I  Dont remove IPVS topology on daemon stop.")]),t._v(" "),a("p",[t._v("--dump-conf     -d  Dump the configuration data.")]),t._v(" "),a("p",[t._v("--log-detail     -D  Detailed log messages.")]),t._v(" "),a("p",[t._v("--log-facility    -S  0-7 Set local syslog facility (default=LOG_DAEMON)")]),t._v(" "),a("h1",{attrs:{id:"-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),a("p",[t._v('KEEPALIVED_OPTIONS="-D -d -S 0"')]),t._v(" "),a("p",[t._v("把 KEEPALIVED_OPTIONS=”-D” 修改为 KEEPALIVED_OPTIONS=”-D -d -S 0”，其中 -S 指定 syslog 的 facility")]),t._v(" "),a("p",[t._v("修改 /etc/rsyslog.conf 末尾添加")]),t._v(" "),a("p",[t._v("vim /etc/rsyslog.conf")]),t._v(" "),a("p",[t._v("local0.*                        /var/log/keepalived.log")]),t._v(" "),a("p",[t._v("重启日志记录服务\nsystemctl restart rsyslog\n重启 keepalived\nsystemctl restart keepalived")]),t._v(" "),a("p",[t._v("此时，可以从 /var/log/keepalived.log 查看日志了。")]),t._v(" "),a("p",[t._v("参考资料\nhttps://juejin.im/post/6844904071183220749\nRabbitMQ 官方文档 —— 集群指南：www.rabbitmq.com/clustering.…\nRabbitMQ 官方文档 —— 高可用镜像队列：www.rabbitmq.com/ha.html\nHAProxy 官方配置手册：cbonte.github.io/haproxy-dco…\nKeepAlived 官方配置手册：www.keepalived.org/manpage.htm…")])])}),[],!1,null,null,null);s.default=e.exports}}]);