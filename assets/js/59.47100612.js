(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{555:function(e,i,n){"use strict";n.r(i);var _=n(22),o=Object(_.a)({},(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("rm ibdata1  ib_logfile0  ib_logfile1")]),e._v(" "),n("p",[e._v("修改innodb_page_size值后mysql不能启动")]),e._v(" "),n("ul",[n("li",[e._v("第一个系统表空间数据文件(ibdata1)的最小文件大小取决于innodb_page_size值")]),e._v(" "),n("li",[e._v("innodb_page_size只能在初始化MySQL实例之前配置，不能在之后修改。如果没有指定值，则使用默认页面大小初始化实例。")]),e._v(" "),n("li",[e._v("MySQL 5.7增加了对32KB和64KB页面大小的支持。对于32KB和64KB的页面大小，最大行长度约为16000字节。当innodb_page_size设置为32KB或64KB时，不支持ROW_FORMAT= compression。对于innodb_page_size=32k，区段大小为2MB。对于innodb_page_size=64KB，区段大小为4MB。当使用32KB或64KB的页面大小时，innodb_log_buffer_size应该至少设置为16M(默认)。")]),e._v(" "),n("li",[e._v("默认的16KB或更大的页面大小适用于各种工作负载，特别是涉及表扫描的查询和涉及批量更新的DML操作。对于涉及许多小写操作的OLTP工作负载，较小的页面大小可能更有效，在这种工作负载中，当单个页面包含许多行时，可能会出现争用问题。对于通常使用较小块的SSD存储设备，较小的页面也可能是有效的。保持InnoDB页面大小接近存储设备块大小，可以最大限度地减少被重写到磁盘的未更改数据量.")])])])}),[],!1,null,null,null);i.default=o.exports}}]);